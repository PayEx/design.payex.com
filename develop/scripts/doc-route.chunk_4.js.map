{"version":3,"sources":["webpack://payex/./src/App/Documentation/components/Buttons/index.js"],"names":["button","window","px","Examples","id","language","showCasePanel","codeFigure","removeOuterTag","className","type","label","UsageWithOtherTags","value","name","href","input","btnType","OutlineButtons","outline","ButtonGroup","Sizes","size","fullWidth","ActiveState","active","DisabledState","disabled","UsageWithIcons","to","icon","ButtonLoader","data","loader","loading","data-button-loader","componentName","Buttons","init","docToc","Component"],"mappings":"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","file":"scripts/doc-route.chunk_4.js?89c2c372a0ba770ffad2","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, Attribute, Property, DocContainer, JavascriptDocs } from \"#\";\nimport ButtonComponent from \"@/Button\";\nimport Alert from \"@/Alert\";\n\nconst { button } = window.px;\n\nconst Examples = () => (\n    <>\n        <h2 id=\"examples\">Examples</h2>\n        <p>The DesignGuide includes a few predefined button styles, each serving its own semantic purpose.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent type=\"primary\" label=\"Primary\" />{\"\\n\"}\n                <ButtonComponent type=\"secondary\" label=\"Secondary\" />{\"\\n\"}\n                <ButtonComponent type=\"danger\" label=\"Danger\" />{\"\\n\"}\n                <ButtonComponent type=\"link\" label=\"Link\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst UsageWithOtherTags = () => (\n    <>\n        <h2 id=\"usage-with-other-tags\">Usage with other tags</h2>\n        <p>The <Property value=\".btn\" /> classes are designed to be used with the <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode> element. However, you can also use these classes on <PrismCode className=\"language-html\">{\"<a>\"}</PrismCode> or <PrismCode className=\"language-html\">{\"<input>\"}</PrismCode> elements (though some browsers may apply a slightly different rendering).</p>\n        <p>When using button classes on <PrismCode className=\"language-html\">{\"<a>\"}</PrismCode> elements that are used to trigger in-page functionality (like collapsing content), rather than linking to new pages or sections within the current page, these links should be given a <Attribute name=\"role\" value=\"button\" /> to appropriately convey their purpose to assistive technologies such as screen readers.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent type=\"primary\" label=\"Anchor\" href=\"#\" />{\"\\n\"}\n                <ButtonComponent type=\"primary\" label=\"Button\" />{\"\\n\"}\n                <ButtonComponent type=\"primary\" input value=\"Input\" btnType=\"button\" />{\"\\n\"}\n                <ButtonComponent type=\"primary\" input value=\"Submit\" btnType=\"submit\" />{\"\\n\"}\n                <ButtonComponent type=\"primary\" input value=\"Reset\" btnType=\"reset\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst OutlineButtons = () => (\n    <>\n        <h2 id=\"outline-buttons\">Outline buttons</h2>\n        <p>Replace the default modifier classes with the <Property value=\".btn-outline-{style}\" /> ones to get an outline of the button style.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent outline type=\"primary\" label=\"Primary\" />{\"\\n\"}\n                <ButtonComponent outline type=\"secondary\" label=\"Secondary\" />{\"\\n\"}\n                <ButtonComponent outline type=\"danger\" label=\"Danger\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst ButtonGroup = () => (\n    <>\n        <h2 id=\"button-group\">Using buttons together</h2>\n        <p>When you use buttons next to each other you have to wrap them in a <Property value=\".button-group\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent type=\"primary\" label=\"Activate\" />{\"\\n\"}\n                <ButtonComponent type=\"secondary\" label=\"Disable\" />{\"\\n\"}\n                <ButtonComponent type=\"danger\" label=\"Delete\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst Sizes = () => (\n    <>\n        <h2 id=\"sizes\">Sizes</h2>\n        <p>For a different sized button add <Property value=\".btn-lg\" />, <Property value=\".btn-sm\" /> or <Property value=\".btn-xs\" />.</p>\n        <h3>Large</h3>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent size=\"lg\" type=\"primary\" label=\"Large button\" />{\"\\n\"}\n                <ButtonComponent size=\"lg\" type=\"secondary\" label=\"Large button\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <h3>Small</h3>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent size=\"sm\" type=\"primary\" label=\"Small button\" />{\"\\n\"}\n                <ButtonComponent size=\"sm\" type=\"secondary\" label=\"Small button\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <h3>Extra small</h3>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent size=\"xs\" type=\"primary\" label=\"Extra small button\" />{\"\\n\"}\n                <ButtonComponent size=\"xs\" type=\"secondary\" label=\"Extra small button\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <h3>Block level</h3>\n        <p>Create block level buttons—those that span the full width of a parent by adding <Property value=\".btn-block\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent fullWidth type=\"primary\" label=\"Block level button\" />{\"\\n\"}\n                <ButtonComponent fullWidth type=\"secondary\" label=\"Block level button\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst ActiveState = () => (\n    <>\n        <h2 id=\"active-state\">Active state</h2>\n        <p>Buttons will appear pressed (with a darker background, darker border, and inset shadow) when active. <b>There’s no need to add a class to <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode>s as they use a pseudo-class.</b> However, you can still force the same active appearance with <Property value=\".active\" /> (and include the <Attribute name=\"aria-pressed\" value=\"true\" /> attribute) should you need to replicate the state programmatically.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent href=\"#\" active type=\"primary\" label=\"Primary\" />{\"\\n\"}\n                <ButtonComponent href=\"#\" active type=\"secondary\" label=\"Secondary\" />{\"\\n\"}\n                <ButtonComponent href=\"#\" active type=\"danger\" label=\"Danger\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst DisabledState = () => (\n    <>\n        <h2 id=\"disabled-state\">Disabled state</h2>\n        <p>Make buttons look inactive by adding the <Attribute name=\"disabled\" /> boolean attribute to any <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode> element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent disabled type=\"primary\" label=\"Primary\" />{\"\\n\"}\n                <ButtonComponent disabled type=\"secondary\" label=\"Secondary\" />{\"\\n\"}\n                <ButtonComponent disabled type=\"danger\" label=\"Danger\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <p>Disabled buttons using the <PrismCode className=\"language-html\">{\"<a>\"}</PrismCode> element behave a bit different:</p>\n        <ul>\n            <li><PrismCode className=\"language-html\">{\"<a>\"}</PrismCode>s do not support the <Attribute name=\"disabled\" />attribute, so you must add the <Property value=\".disabled\" /> class to make it visually appear disabled.</li>\n            <li>Some future-friendly styles are included to disable all <Property value=\"pointer-events\" /> on anchor buttons. In browsers which support that property, you won’t see the disabled cursor at all.</li>\n            <li>Disabled buttons should include the <Attribute name=\"aria-disabled\" value=\"true\" /> attribute to indicate the state of the element to assistive technologies.</li>\n        </ul>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent href=\"#\" disabled type=\"primary\" label=\"Primary\" />{\"\\n\"}\n                <ButtonComponent href=\"#\" disabled type=\"secondary\" label=\"Secondary\" />{\"\\n\"}\n                <ButtonComponent href=\"#\" disabled type=\"danger\" label=\"Danger\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <Alert type=\"warning\">\n            <h5>Link functionality caveat</h5>\n            <p>The <Property value=\".disabled\" /> class uses <Property value=\"pointer-events: none\" /> to try to disable the link functionality of <PrismCode className=\"language-html\">{\"<a>\"}</PrismCode>s, but that CSS property is not yet standardized. In addition, even in browsers that do support <Property value=\"pointer-events: none\" />, keyboard navigation remains unaffected, meaning that sighted keyboard users and users of assistive technologies will still be able to activate these links. So to be safe, add a <Property value={\"tabindex=\\\"-1\\\"\"} /> attribute on these links (to prevent them from receiving keyboard focus) and use custom JavaScript to disable their functionality.</p>\n        </Alert>\n    </>\n);\n\nconst UsageWithIcons = () => (\n    <>\n        <h2 id=\"usage-with-icons\">Usage with icons</h2>\n        <p>To use a button with an icon simply put the icon markup inside the <PrismCode className=\"language-html\">{\"<button>\"}</PrismCode>.</p>\n        <p>Read more about icon usage here <Link to=\"/docs/core/icons\">here</Link>.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent icon=\"cloud\" type=\"primary\" label=\"Primary\" />{\"\\n\\n\"}\n                <ButtonComponent icon=\"cloud\" type=\"secondary\" label=\"Secondary\" />{\"\\n\"}\n                <ButtonComponent icon=\"cloud\" type=\"danger\" label=\"Danger\" />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n    </>\n);\n\nconst ButtonLoader = () => (\n    <>\n        <h2 id=\"button-loader\">Button loader</h2>\n        <p>To use a button with a loader simply add the attribute <Attribute data name=\"button-loader\" /> to add the required markup for the loader component. Add class <Property value=\".loading\" /> to display the loader.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent type=\"primary\" label=\"Primary\" loader loading />{\"\\n\"}\n                <ButtonComponent type=\"secondary\" label=\"Secondary\" loader loading />{\"\\n\"}\n                <ButtonComponent type=\"danger\" label=\"Danger\" loader loading />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <h3>Disabled loader</h3>\n        <p><Property value=\".loading\" /> with <Attribute name=\"disabled\" /></p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent disabled type=\"primary\" label=\"Primary\" loader loading />{\"\\n\"}\n                <ButtonComponent disabled type=\"secondary\" label=\"Secondary\" loader loading />{\"\\n\"}\n                <ButtonComponent disabled type=\"danger\" label=\"Danger\" loader loading />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <h3>Outline loader</h3>\n        <p><Property value=\".loading\" /> with <Property value=\".outline\" /></p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure removeOuterTag>\n            <div className=\"button-group\">{\"\\n\"}\n                <ButtonComponent outline type=\"primary\" label=\"Primary\" loader loading />{\"\\n\"}\n                <ButtonComponent outline type=\"secondary\" label=\"Secondary\" loader loading />{\"\\n\"}\n                <ButtonComponent outline type=\"danger\" label=\"Danger\" loader loading />{\"\\n\"}\n            </div>\n        </ComponentPreview>\n        <h3>The markup</h3>\n        <p>Adding the attribute <Attribute data name=\"button-loader\" /> to a button component will produce the following html:</p>\n        <ComponentPreview language=\"html\" codeFigure>\n            <button className=\"btn btn-default loading\" type=\"button\" data-button-loader>{\"\\n\\t\"}\n                Default{\"\\n\\t\"}\n                <div className=\"loader\">{\"\\n\\t\\t\"}\n                    <ul className=\"loader-icon\">{\"\\n\\t\\t\\t\"}\n                        <li></li>{\"\\n\\t\\t\\t\"}\n                        <li></li>{\"\\n\\t\\t\\t\"}\n                        <li></li>{\"\\n\\t\\t\"}\n                    </ul>{\"\\n\\t\"}\n                </div>{\"\\n\"}\n            </button>\n        </ComponentPreview>\n        <Alert type=\"warning\">\n            <h5>Including the loader html</h5>\n            <p>If you want more control over the loader component you can include the html yourself (e.g. for server-side rendering), just make sure you do <b>not</b> add the attribute <Attribute data name=\"button-loader\" />.</p>\n        </Alert>\n        <h3>JavascriptMethods</h3>\n        <p>\n            Only button loaders have to be initialized.\n        </p>\n        <JavascriptDocs componentName=\"button\" />\n    </>\n);\n\nclass Buttons extends Component {\n    componentDidMount () {\n        button.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">Use our button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</p>\n                <Examples />\n                <UsageWithOtherTags />\n                <OutlineButtons />\n                <ButtonGroup />\n                <Sizes />\n                <ActiveState />\n                <DisabledState />\n                <UsageWithIcons />\n                <ButtonLoader />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Buttons;\n\n/* for testing */\nexport { Examples, UsageWithOtherTags, OutlineButtons, ButtonGroup, Sizes, ActiveState, DisabledState, UsageWithIcons, ButtonLoader };\n"],"sourceRoot":""}
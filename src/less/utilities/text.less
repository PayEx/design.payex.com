/* stylelint-disable block-opening-brace-space-before, declaration-no-important */

// Alignment

.text-justify  { text-align: justify !important; }
.text-nowrap   { white-space: nowrap !important; }
.text-truncate { .text-truncate(); }

// Responsive alignment

.for-each(@breakpoint in @grid-breakpoints) {
    @ruleset: {
        .text@{infix}-left           { text-align: left !important; }
        .text@{infix}-right          { text-align: right !important; }
        .text@{infix}-center         { text-align: center !important; }
    }

    .media-breakpoint-up(@breakpoint, @ruleset);
}

// Transformation

.text-lowercase      { text-transform: lowercase !important; }
.text-uppercase      { text-transform: uppercase !important; }
.text-capitalize     { text-transform: capitalize !important; }

// Weight and italics
.font-weight-light   { font-weight: @font-weight-light !important; }
.font-weight-normal  { font-weight: @font-weight-normal !important; }
.font-weight-bold    { font-weight: @font-weight-bold !important; }
.font-italic         { font-style: italic !important; }

// Contextual colors

.for-each(@color in @color-list) {
    @name: at(@color, 1);
    @value: at(@color, 2);

    .color-variant(~"color-@{name}", @value);
}

.text-muted { color: @text-muted !important; }

.text-black-50 { color: fade(@black, 50%) !important; }
.text-white-50 { color: fade(@white, 50%) !important; }

// Misc

.text-decoration-none { text-decoration: none !important; }

// Reset

.text-reset { color: inherit !important; }

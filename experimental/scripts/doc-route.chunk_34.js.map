{"version":3,"sources":["webpack://payex/./src/App/Documentation/core/Typography/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Fonts","Headings","Small","Lead","Inline","TextUtilities","Abbreviations","Blockquotes","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_prism__WEBPACK_IMPORTED_MODULE_2__","react_prism__WEBPACK_IMPORTED_MODULE_2___default","_utils__WEBPACK_IMPORTED_MODULE_3__","a","createElement","Fragment","id","language","codeFigure","showCasePanel","value","className","to","title","href","target","rel","Typography","docToc"],"mappings":"qGAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAAAL,EAAAG,EAAAD,EAAA,0BAAAI,IAAAN,EAAAG,EAAAD,EAAA,yBAAAK,IAAAP,EAAAG,EAAAD,EAAA,2BAAAM,IAAAR,EAAAG,EAAAD,EAAA,kCAAAO,IAAAT,EAAAG,EAAAD,EAAA,kCAAAQ,IAAAV,EAAAG,EAAAD,EAAA,gCAAAS,IAAA,IAAAC,EAAAZ,EAAA,GAAAa,EAAAb,EAAAc,EAAAF,GAAAG,EAAAf,EAAA,IAAAgB,EAAAhB,EAAA,KAAAiB,EAAAjB,EAAAc,EAAAE,GAAAE,EAAAlB,EAAA,KAMMI,EAAQ,WAKV,OACIS,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cAAA,MAAIE,GAAG,QAAP,QACAT,EAAAM,EAAAC,cAAA,gNACAP,EAAAM,EAAAC,cAAA,6BACAP,EAAAM,EAAAC,cAAA,iLACAP,EAAAM,EAAAC,cAACF,EAAA,iBAAD,CAAkBK,SAAS,MAAMC,YAAU,GAV7B,mIAiBpBnB,EAAW,kBACbQ,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cAAA,MAAIE,GAAG,YAAP,YACAT,EAAAM,EAAAC,cAAA,8EACAP,EAAAM,EAAAC,cAACF,EAAA,iBAAD,CAAkBK,SAAS,OAAOE,eAAa,EAACD,YAAU,GACtDX,EAAAM,EAAAC,cAAA,wBACAP,EAAAM,EAAAC,cAAA,wBACAP,EAAAM,EAAAC,cAAA,wBACAP,EAAAM,EAAAC,cAAA,wBACAP,EAAAM,EAAAC,cAAA,wBACAP,EAAAM,EAAAC,cAAA,yBAEJP,EAAAM,EAAAC,cAAA,wBAAeP,EAAAM,EAAAC,cAACF,EAAA,SAAD,CAAUQ,MAAM,QAA/B,YAAgDb,EAAAM,EAAAC,cAACF,EAAA,SAAD,CAAUQ,MAAM,QAAhE,6HACAb,EAAAM,EAAAC,cAACF,EAAA,iBAAD,CAAkBK,SAAS,OAAOE,eAAa,EAACD,YAAU,GACtDX,EAAAM,EAAAC,cAAA,KAAGO,UAAU,MAAb,eACAd,EAAAM,EAAAC,cAAA,KAAGO,UAAU,MAAb,eACAd,EAAAM,EAAAC,cAAA,KAAGO,UAAU,MAAb,eACAd,EAAAM,EAAAC,cAAA,KAAGO,UAAU,MAAb,eACAd,EAAAM,EAAAC,cAAA,KAAGO,UAAU,MAAb,eACAd,EAAAM,EAAAC,cAAA,KAAGO,UAAU,MAAb,kBAKNrB,EAAQ,kBACVO,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cAAA,MAAIE,GAAG,SAAP,SACAT,EAAAM,EAAAC,cAAA,oBAAWP,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,mBAAjD,sEACAd,EAAAM,EAAAC,cAACF,EAAA,iBAAD,CAAkBK,SAAS,OAAOE,eAAa,EAACD,YAAU,GACtDX,EAAAM,EAAAC,cAAA,0BAAiBP,EAAAM,EAAAC,cAAA,mDAKvBb,EAAO,kBACTM,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cAAA,MAAIE,GAAG,QAAP,QACAT,EAAAM,EAAAC,cAAA,gDAAuCP,EAAAM,EAAAC,cAACF,EAAA,SAAD,CAAUQ,MAAM,UAAvD,KACAb,EAAAM,EAAAC,cAACF,EAAA,iBAAD,CAAkBK,SAAS,OAAOE,eAAa,EAACD,YAAU,GACtDX,EAAAM,EAAAC,cAAA,KAAGO,UAAU,QAAb,qFAKNnB,EAAS,kBACXK,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cAAA,MAAIE,GAAG,wBAAP,wBACAT,EAAAM,EAAAC,cAAA,sDACAP,EAAAM,EAAAC,cAACF,EAAA,iBAAD,CAAkBK,SAAS,OAAOE,eAAa,EAACD,YAAU,GACtDX,EAAAM,EAAAC,cAAA,wCAA+BP,EAAAM,EAAAC,cAAA,yBAA/B,UACAP,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,yEACHP,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,6EACHP,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,wFACHP,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,yDACHP,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,yEACHP,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,mDACHP,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,0CACHP,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,qDACHP,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,4EAEPP,EAAAM,EAAAC,cAAA,gBACQP,EAAAM,EAAAC,cAACF,EAAA,SAAD,CAAUQ,MAAM,UADxB,QACuCb,EAAAM,EAAAC,cAACF,EAAA,SAAD,CAAUQ,MAAM,WADvD,2DAC0Hb,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,UADhK,QAC0Ld,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,WADhO,iFAGAd,EAAAM,EAAAC,cAAA,oDACwCP,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,OAD9E,QACqGd,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,OAD3I,cACwKd,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,OAD9M,yFACsTd,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,OAD5V,iDAMFlB,EAAgB,kBAClBI,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cAAA,MAAIE,GAAG,kBAAP,kBACAT,EAAAM,EAAAC,cAAA,uCAA8BP,EAAAM,EAAAC,cAACL,EAAA,KAAD,CAAMa,GAAG,0BAAT,mBAA9B,OAIFlB,EAAgB,kBAClBG,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cAAA,MAAIE,GAAG,iBAAP,iBACAT,EAAAM,EAAAC,cAAA,8CAAqCP,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,UAA3E,+NACAd,EAAAM,EAAAC,cAAA,gBAAOP,EAAAM,EAAAC,cAACF,EAAA,SAAD,CAAUQ,MAAM,gBAAvB,yDACAb,EAAAM,EAAAC,cAACF,EAAA,iBAAD,CAAkBK,SAAS,OAAOE,eAAa,EAACD,YAAU,GACtDX,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,QAAMS,MAAM,kBAAZ,QACHhB,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,QAAMS,MAAM,4BAA4BF,UAAU,cAAlD,UAEPd,EAAAM,EAAAC,cAAA,SAAGP,EAAAM,EAAAC,cAAA,KAAGU,KAAK,iEAAiEC,OAAO,SAASC,IAAI,uBAA7F,aAAH,2BAIFrB,EAAc,WA4BhB,OACIE,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cA7BgB,kBACpBP,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cAAA,MAAIE,GAAG,eAAP,eACAT,EAAAM,EAAAC,cAAA,yFAAgFP,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,gBAAtH,OAAqJd,EAAAM,EAAAC,cAACF,EAAA,SAAD,CAAUQ,MAAM,gBAArK,kCACAb,EAAAM,EAAAC,cAACF,EAAA,iBAAD,CAAkBK,SAAS,OAAOE,eAAa,EAACD,YAAU,GACtDX,EAAAM,EAAAC,cAAA,cAAYO,UAAU,cAClBd,EAAAM,EAAAC,cAAA,sGAuBR,MACAP,EAAAM,EAAAC,cAlByB,kBAC7BP,EAAAM,EAAAC,cAAAP,EAAAM,EAAAE,SAAA,KACIR,EAAAM,EAAAC,cAAA,6BACAP,EAAAM,EAAAC,cAAA,kBAASP,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,YAA/C,oEAAuId,EAAAM,EAAAC,cAACH,EAAAE,EAAD,CAAWQ,UAAU,iBAAiB,UAA7K,KACAd,EAAAM,EAAAC,cAACF,EAAA,iBAAD,CAAkBK,SAAS,OAAOE,eAAa,EAACD,YAAU,GACtDX,EAAAM,EAAAC,cAAA,cAAYO,UAAU,cAClBd,EAAAM,EAAAC,cAAA,gJAGAP,EAAAM,EAAAC,cAAA,cAAQP,EAAAM,EAAAC,cAAA,QAAMS,MAAM,yBAAZ,mBAShB,QAmBGI,UAdI,kBACfpB,EAAAM,EAAAC,cAACF,EAAA,aAAD,CAAcgB,QAAM,GAChBrB,EAAAM,EAAAC,cAAA,KAAGO,UAAU,QAAb,gEACAd,EAAAM,EAAAC,cAAChB,EAAD,MACAS,EAAAM,EAAAC,cAACf,EAAD,MACAQ,EAAAM,EAAAC,cAACd,EAAD,MACAO,EAAAM,EAAAC,cAACb,EAAD,MACAM,EAAAM,EAAAC,cAACZ,EAAD,MACAK,EAAAM,EAAAC,cAACX,EAAD,MACAI,EAAAM,EAAAC,cAACV,EAAD,MACAG,EAAAM,EAAAC,cAACT,EAAD","file":"scripts/doc-route.chunk_34.js?b7589d7a861cc6440393","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, DocContainer, Property } from \"#\";\n\nconst Fonts = () => {\n    const removeRobotoCode = `html {\n                                font-family: GillSans, Calibri, Trebuchet, sans-serif;\n                            }`;\n\n    return (\n        <>\n            <h2 id=\"font\">Font</h2>\n            <p>The standard font PayEx DesignGuide uses is Roboto. It is included in the stylesheet. The included font weights you can use are: 300, 400, 500, 700 & 900. Both normal and italicized is available.</p>\n            <h3>Removing Roboto</h3>\n            <p>In case your site is not going to use Roboto, you can modify your font stack by modifying the snippet below to your preferance and add it to your custom stylesheet.</p>\n            <ComponentPreview language=\"css\" codeFigure>\n                {removeRobotoCode}\n            </ComponentPreview>\n        </>\n    );\n};\n\nconst Headings = () => (\n    <>\n        <h2 id=\"headings\">Headings</h2>\n        <p>PayEx DesignGuide provides basic styling on all headings (h1-h6).</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h1>Heading h1</h1>\n            <h2>Heading h2</h2>\n            <h3>Heading h3</h3>\n            <h4>Heading h4</h4>\n            <h5>Heading h5</h5>\n            <h6>Heading h6</h6>\n        </ComponentPreview>\n        <p>The classes <Property value=\".h1\" /> through <Property value=\".h6\" /> are also available, for when you want to match the font styling of a heading but cannot use the associated HTML element.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"h1\">.h1 heading</p>\n            <p className=\"h2\">.h2 heading</p>\n            <p className=\"h3\">.h3 heading</p>\n            <p className=\"h4\">.h4 heading</p>\n            <p className=\"h5\">.h5 heading</p>\n            <p className=\"h6\">.h6 heading</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Small = () => (\n    <>\n        <h2 id=\"small\">Small</h2>\n        <p>Use the <PrismCode className=\"language-html\">{\"<small></small>\"}</PrismCode> tags to create a secondary heading within a heading tag or class.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <h2>Main heading <small>with a faded secondary heading</small></h2>\n        </ComponentPreview>\n    </>\n);\n\nconst Lead = () => (\n    <>\n        <h2 id=\"lead\">Lead</h2>\n        <p>Make a paragraph stand out by using <Property value=\".lead\" />.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p className=\"lead\">This is a leading paragraph which for instance can be used as an introduction.</p>\n        </ComponentPreview>\n    </>\n);\n\nconst Inline = () => (\n    <>\n        <h2 id=\"inline-text-elements\">Inline text elements</h2>\n        <p>Styling for common inline HTML5 elements.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p>You can use the mark tag to <mark>highlight</mark> text.</p>\n            <p><del>This line of text is meant to be treated as deleted text.</del></p>\n            <p><s>This line of text is meant to be treated as no longer accurate.</s></p>\n            <p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\n            <p><u>This line of text will render as underlined</u></p>\n            <p><small>This line of text is meant to be treated as fine print.</small></p>\n            <p><strong>This line rendered as bold text.</strong></p>\n            <p><b>This line really stands out.</b></p>\n            <p><em>This line rendered as italicized text.</em></p>\n            <p><i>This is the last line, it too will render as italicized text.</i></p>\n        </ComponentPreview>\n        <p>\n            The <Property value=\".mark\" /> and <Property value=\".small\" /> classes are also available to apply the same styles as <PrismCode className=\"language-html\">{\"<mark>\"}</PrismCode> and <PrismCode className=\"language-html\">{\"<small>\"}</PrismCode> while avoiding any unwanted semantic implications that the tags would bring.\n        </p>\n        <p>\n        While not shown above, feel free to use <PrismCode className=\"language-html\">{\"<b>\"}</PrismCode> and <PrismCode className=\"language-html\">{\"<i>\"}</PrismCode> in HTML5. <PrismCode className=\"language-html\">{\"<b>\"}</PrismCode> is meant to highlight words or phrases without conveying additional importance while <PrismCode className=\"language-html\">{\"<i>\"}</PrismCode> is mostly for voice, technical terms, etc.\n        </p>\n    </>\n);\n\nconst TextUtilities = () => (\n    <>\n        <h2 id=\"text-utilities\">Text utilities</h2>\n        <p>Change text color with our <Link to=\"/docs/utilities/colors\">color utilities</Link>.</p>\n    </>\n);\n\nconst Abbreviations = () => (\n    <>\n        <h2 id=\"abbreviations\">Abbreviations</h2>\n        <p>Stylized implementation of HTML’s <PrismCode className=\"language-html\">{\"<abbr>\"}</PrismCode> element for abbreviations and acronyms to show the expanded version on hover. Abbreviations have a default underline and gain a help cursor to provide additional context on hover and to users of assistive technologies.</p>\n        <p>Add <Property value=\".initialism\" /> to an abbreviation for a slightly smaller font-size.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <p><abbr title=\"Laugh Out Loud\">LOL</abbr></p>\n            <p><abbr title=\"HyperText Markup Language\" className=\"initialism\">HTML</abbr></p>\n        </ComponentPreview>\n        <p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr\" target=\"_blank\" rel=\"noopener noreferrer\">Read more</a> about abbreviations.</p>\n    </>\n);\n\nconst Blockquotes = () => {\n    const BlockquotesText = () => (\n        <>\n            <h2 id=\"blockquotes\">Blockquotes</h2>\n            <p>For quoting blocks of content from another source within your document. Wrap <PrismCode className=\"language-html\">{\"<blockquote>\"}</PrismCode> or <Property value=\".blockquote\" /> around any HTML as the quote.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    const BlockquoteWithSourceText = () => (\n        <>\n            <h3>Naming a source</h3>\n            <p>Add a <PrismCode className=\"language-html\">{\"<footer>\"}</PrismCode> for identifying the source. Wrap the name of the source work in <PrismCode className=\"language-html\">{\"<cite>\"}</PrismCode>.</p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <blockquote className=\"blockquote\">\n                    <p>\n                        Better learn balance. Balance is key. Balance good, karate good. Everything good. Balance bad, better pack up, go home. Understand?\n                    </p>\n                    <footer><cite title=\"The Karate Kid (1984)\">Mr. Miyagi</cite></footer>\n                </blockquote>\n            </ComponentPreview>\n        </>\n    );\n\n    return (\n        <>\n            <BlockquotesText />\n            <BlockquoteWithSourceText />\n        </>\n    );\n};\n\nconst Typography = () => (\n    <DocContainer docToc>\n        <p className=\"lead\">Documentation and examples for PayEx DesignGuide typography.</p>\n        <Fonts />\n        <Headings />\n        <Small />\n        <Lead />\n        <Inline />\n        <TextUtilities />\n        <Abbreviations />\n        <Blockquotes />\n    </DocContainer>\n);\n\nexport default Typography;\n\n/* For testing */\nexport { Fonts, Headings, Small, Lead, Inline, TextUtilities, Abbreviations, Blockquotes };\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://payex/./src/App/components/InputGroup/index.js","webpack://payex/./src/App/components/FormComponents/Checkbox.js","webpack://payex/./src/App/components/FormComponents/Datepicker.js","webpack://payex/./src/App/components/FormComponents/FormControlText.js","webpack://payex/./src/App/components/FormComponents/Radio.js","webpack://payex/./src/App/components/FormComponents/Rangeslider.js","webpack://payex/./src/App/components/FormComponents/Togglebox.js","webpack://payex/./src/App/components/FormComponents/index.js","webpack://payex/./src/App/Documentation/components/Forms/index.js"],"names":["__webpack_require__","d","__webpack_exports__","Addon","BtnAddon","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","_ref","icon","value","disabled","a","createElement","className","Fragment","_ref2","valIcon","btnType","type","concat","Feedback","_ref3","InputGroup","_ref4","id","placeholder","pattern","validate","required","defaultValue","autoComplete","readOnly","label","validationState","selectOptions","prefixValue","prefixType","prefixBtnType","postfixValue","postfixType","postfixBtnType","feedbackIcon","helpBlock","errorMessage","successMessage","attrs","data-validate","inputGrpClasses","classnames","htmlFor","map","opt","i","key","length","data-success","data-error","propTypes","PropTypes","string","isRequired","bool","oneOf","array","oneOfType","errorMessag","successMessag","Checkbox","checked","defaultChecked","react_default","Datepicker","format","time","min","max","months","fulldate","mode","allowinput","data-datepicker","data-datepicker-format","data-datepicker-time","data-datepicker-min","data-datepicker-max","data-datepicker-value","data-datepicker-months","data-datepicker-fulldate","data-datepicker-mode","data-datepicker-allowinput","data-required","FormControlText","text","Radio","name","Rangeslider","step","color","valueLabel","valueLabelPrefix","valueLabelPostfix","valueLabelPosition","data-rs-value","number","Togglebox","FormComponents_Checkbox","FormComponents_Datepicker","FormComponents_FormControlText","FormComponents_Radio","FormComponents_Rangeslider","FormComponents_Togglebox","window","px","rangeslider","validation","Overview","react_prism__WEBPACK_IMPORTED_MODULE_1___default","_utils__WEBPACK_IMPORTED_MODULE_2__","language","showCasePanel","codeFigure","onSubmit","e","preventDefault","_components_InputGroup__WEBPACK_IMPORTED_MODULE_3__","_components_FormComponents__WEBPACK_IMPORTED_MODULE_5__","_components_Button__WEBPACK_IMPORTED_MODULE_4__","FormGrid","Validation","data","noValidate","action","data-disable-invalid","UsageWithFieldsets","StaticText","Checkboxes","RadioButtons","Toggleboxes","RangeSlider","DisabledFormComponents","JavascriptMethods","componentName","component","func","Forms","Component","init","docToc"],"mappings":"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","file":"scripts/doc-route.chunk_8.js?12f52456e482c6e951dc","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Addon = ({ icon, value, disabled }) => (\n    <span className=\"input-group-addon\" disabled={disabled}>{icon ? <>{\"\\n\"}<i className=\"material-icons\">{value}</i>{\"\\n\"}</> : value}</span>\n);\n\nconst BtnAddon = ({ className, value, valIcon, btnType, disabled }) => (\n    <button type=\"button\" className={`btn${btnType ? ` btn-${btnType}` : \"\"}${className ? ` ${className}` : \"\"}`} disabled={disabled}>{\"\\n\"}\n        {!valIcon ? value : <i className=\"material-icons\">{value}</i>}{\"\\n\"}\n    </button>\n);\n\nconst Feedback = ({ icon }) => (\n    <span className=\"form-control-feedback\">{\"\\n\\t\\t\"}\n        <i className=\"material-icons\">{icon}</i>{\"\\n\\t\"}\n    </span>\n);\n\nconst InputGroup = ({\n    id,\n    type,\n    placeholder,\n    pattern,\n    validate,\n    required,\n    defaultValue,\n    autoComplete,\n    disabled,\n    readOnly,\n    label,\n    validationState,\n    selectOptions,\n    prefixValue,\n    prefixType,\n    prefixBtnType,\n    postfixValue,\n    postfixType,\n    postfixBtnType,\n    feedbackIcon,\n    helpBlock,\n    errorMessage,\n    successMessage\n}) => {\n    const attrs = {\n        type: type || null,\n        className: \"form-control\",\n        id: id || null,\n        placeholder: placeholder || null,\n        defaultValue: defaultValue || \"\",\n        disabled: disabled || null,\n        readOnly: readOnly || null,\n        autoComplete: autoComplete || null,\n        required: required || null,\n        pattern: pattern ? \"\" : null,\n        \"data-validate\": validate ? \"\" : null\n    };\n\n    const inputGrpClasses = classnames(\n        \"input-group\",\n        validationState ? `has-${validationState}` : null,\n        feedbackIcon ? \"has-feedback\" : null\n    );\n\n    return (\n        <div className=\"form-group\">{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n            <div className={inputGrpClasses}>{\"\\n\"}\n                {!prefixValue\n                    ? null\n                    : (!prefixType\n                        ? <Addon value={prefixValue}/>\n                        : (prefixType === \"button\"\n                            ? <BtnAddon value={prefixValue} btnType={prefixBtnType} disabled={disabled} />\n                            : <Addon icon={prefixType} value={prefixValue} disabled={disabled} />))}\n                {type === \"textarea\" ?\n                    <textarea {...attrs} ></textarea>\n                    : type === \"select\" ?\n                        <select className=\"form-control\" disabled={disabled} readOnly={readOnly}>{\"\\n\\t\\t\"}\n                            {selectOptions.map((opt, i) => (\n                                <Fragment key={opt + i}>\n                                    <option>{opt}</option>{(i !== selectOptions.length - 1) ? \"\\n\\t\\t\" : \"\"}\n                                </Fragment>\n                            ))}{\"\\n\\t\"}\n                        </select>\n                        :\n                        <input {...attrs} />}\n                {\"\\n\"}\n                {feedbackIcon ? <Feedback icon={feedbackIcon} /> : null} {feedbackIcon ? \"\\n\" : null}\n                {!postfixValue\n                    ? null\n                    : (!postfixType\n                        ? <Addon value={postfixValue}/>\n                        : (postfixType === \"button\"\n                            ? <BtnAddon value={postfixValue} btnType={postfixBtnType} disabled={disabled} />\n                            : <Addon icon={postfixType} value={postfixValue} disabled={disabled} />))}\n            </div>\n            {helpBlock ? <div className=\"help-block\" data-success={successMessage || null} data-error={errorMessage || null}>{helpBlock}</div> : null}\n        </div>\n    );\n};\n\nInputGroup.propTypes = {\n    type: PropTypes.string.isRequired,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    pattern: PropTypes.string,\n    validate: PropTypes.bool,\n    required: PropTypes.bool,\n    defaultValue: PropTypes.string,\n    autoComplete: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    label: PropTypes.string,\n    validationState: PropTypes.oneOf([\"success\", \"error\", \"\"]),\n    selectOptions: PropTypes.array,\n    prefixValue: PropTypes.string,\n    prefixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    prefixBtnType: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\"]),\n    postfixValue: PropTypes.string,\n    postfixType: PropTypes.oneOf([\"button\", \"icon\", \"\"]),\n    postfixBtnType: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\"]),\n    feedbackIcon: PropTypes.string,\n    helpBlock: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool\n    ]),\n    errorMessag: PropTypes.string,\n    successMessag: PropTypes.string\n};\n\nexport default InputGroup;\n\nexport {\n    Addon,\n    BtnAddon\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"checkbox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Addon, BtnAddon } from \"@/InputGroup\";\n\nconst Datepicker = ({ format, time, min, max, months, value, label, prefixValue, prefixType, fulldate, mode, allowinput, required, id }) => {\n    const attrs = {\n        id,\n        className: \"form-control\",\n        type: \"text\",\n        \"data-datepicker\": \"\",\n        \"data-datepicker-format\": format || null,\n        \"data-datepicker-time\": time || null,\n        \"data-datepicker-min\": min || null,\n        \"data-datepicker-max\": max || null,\n        \"data-datepicker-value\": value || null,\n        \"data-datepicker-months\": months || null,\n        \"data-datepicker-fulldate\": fulldate || null,\n        \"data-datepicker-mode\": mode || null,\n        \"data-datepicker-allowinput\": allowinput || null,\n        \"data-required\": required || null\n    };\n\n    return (\n        label ? (\n            <div className=\"form-group\">{\"\\n\"}\n                <label htmlFor={id || null}>{label}</label>{\"\\n\"}\n                <div className=\"input-group\">{\"\\n\"}\n                    {!prefixValue\n                        ? null\n                        : (!prefixType\n                            ? <Addon value={prefixValue}/>\n                            : (prefixType === \"button\"\n                                ? <BtnAddon value={prefixValue} className=\"input-group-addon\" valIcon />\n                                : <Addon icon={prefixType} value={prefixValue} />))}\n                    {\"\\n\"}\n                    <input {...attrs} />{\"\\n\"}\n                </div>\n            </div>\n        ) : <input {...attrs} />);\n};\n\nDatepicker.propTypes = {\n    format: PropTypes.oneOf([\"nb\", \"sv\", \"da\", \"fi\", \"en\", \"iso8601\"]),\n    prefixType: PropTypes.oneOf([\"button\", \"icon\"]),\n    time: PropTypes.bool,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    months: PropTypes.string,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    required: PropTypes.bool\n};\n\nexport default Datepicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormControlText = ({ text, label }) => (\n    <div className=\"form-group\">{\"\\n\"}\n        {label ? <label>{label}</label> : null}{label ? \"\\n\" : null}\n        <span className=\"form-control-text\">{text}</span>{\"\\n\"}\n    </div>\n);\n\nFormControlText.propTypes = {\n    text: PropTypes.string.isRequired,\n    label: PropTypes.string\n};\n\nexport default FormControlText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Radio = ({ id, checked, disabled, label, name }) => {\n    const attrs = {\n        type: \"radio\",\n        id: id || null,\n        name: name || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"radio\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRadio.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Radio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rangeslider = ({ name, min, max, step, color, value, disabled, valueLabel, valueLabelPrefix, valueLabelPostfix, valueLabelPosition }) => {\n    const attrs = {\n        type: \"range\",\n        name,\n        min,\n        max,\n        step,\n        defaultValue: value,\n        disabled\n    };\n\n    const ValueLabel = () => (\n        <output className=\"value-label\" >{\"\\n\\t\\t\"}\n            <p>{\"\\n\\t\\t\\t\"}\n                {valueLabelPrefix ? <span>{valueLabelPrefix}</span> : null}{valueLabelPrefix ? \"\\n\\t\\t\\t\" : null}\n                <span data-rs-value>{value}</span>{\"\\n\\t\\t\\t\"}\n                {valueLabelPostfix ? <span>{valueLabelPostfix}</span> : null}{valueLabelPostfix ? \"\\n\\t\\t\" : null}\n            </p>{\"\\n\\t\"}\n        </output>\n    );\n\n    return (\n        <div className={`rangeslider rangeslider-${color ? color : \"brand\"} label-${valueLabelPosition ? valueLabelPosition : \"right\"}`}>{\"\\n\"}\n            <input {...attrs}/>{valueLabel ? \"\\n\" : null}\n            {valueLabel ? <ValueLabel /> : null}{valueLabel ? \"\\n\" : null}\n        </div>\n    );\n};\n\nRangeslider.propTypes = {\n    name: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    color: PropTypes.oneOf([\"brand\", \"neutral\", \"default\"]),\n    value: PropTypes.number,\n    disabled: PropTypes.bool,\n    valueLabel: PropTypes.bool,\n    valueLabelPrefix: PropTypes.string,\n    valueLabelPostfix: PropTypes.string,\n    valueLabelPosition: PropTypes.string\n};\n\nexport default Rangeslider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Togglebox = ({ id, checked, disabled, label }) => {\n    const attrs = {\n        type: \"checkbox\",\n        id: id || null,\n        disabled: disabled || null,\n        defaultChecked: checked || null\n    };\n\n    return (\n        <div className=\"togglebox\">{\"\\n\"}\n            <input {...attrs} />{\"\\n\"}\n            {label ? <label htmlFor={id}>{label}</label> : null}{label ? \"\\n\" : null}\n        </div>\n    );\n};\n\nTogglebox.propTypes = {\n    id: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string\n};\n\nexport default Togglebox;\n","import Checkbox from \"./Checkbox\";\nimport Datepicker from \"./Datepicker\";\nimport FormControlText from \"./FormControlText\";\nimport Radio from \"./Radio\";\nimport Rangeslider from \"./Rangeslider\";\nimport Togglebox from \"./Togglebox\";\n\nexport default {\n    Checkbox,\n    Datepicker,\n    FormControlText,\n    Radio,\n    Rangeslider,\n    Togglebox\n};\n\nexport { Checkbox, Datepicker, FormControlText, Radio, Rangeslider, Togglebox };\n","import React, { Component } from \"react\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, DocContainer, Attribute, Property, PxScript, JavascriptDocs } from \"#\";\nimport InputGroup from \"@/InputGroup\";\nimport Button from \"@/Button\";\nimport { Checkbox, FormControlText, Radio, Rangeslider, Togglebox } from \"@/FormComponents\";\n\nconst { rangeslider, validation } = window.px;\n\nconst Overview = () => (\n    <>\n        <h2 id=\"overview\">Overview</h2>\n        <p>\n            Use <PrismCode className=\"language-html\">{\"<input>\"}</PrismCode> in combination with <PrismCode className=\"language-html\">{\"<form-group>\"}</PrismCode>s and/or <PrismCode className=\"language-html\">{\"<form>\"}</PrismCode>s to\n            show a collection of related inputs. <PrismCode className=\"language-html\">{\"<form-group>\"}</PrismCode>s can contain more than just an input, like a <PrismCode className=\"language-html\">{\"<label>\"}</PrismCode> or\n            <PrismCode className=\"language-html\">{\"<help-block>\"}</PrismCode>s.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form onSubmit={e => e.preventDefault()}>\n                <InputGroup\n                    id=\"first-name\"\n                    type=\"text\"\n                    autoComplete=\"given-name\"\n                    label=\"First name\"\n                    placeholder=\"Enter your first name\"\n                    helpBlock=\"The first word of your full name\"\n                />\n                <InputGroup\n                    id=\"last-name\"\n                    type=\"text\"\n                    label=\"Last name\"\n                    autoComplete=\"family-name\"\n                    placeholder=\"Enter your last name\"\n                    helpBlock=\"The very last collection of letters in your name\"\n                />\n                <InputGroup\n                    id=\"email-address\"\n                    type=\"text\"\n                    label=\"Email\"\n                    autoComplete=\"email\"\n                    placeholder=\"Enter your email\"\n                    helpBlock=\"The last part is probably @payex.com\"\n                />\n                <div className=\"form-group\">\n                    <Checkbox label={\"Subscribe to our Shovels and Tapestry catalogue\"} id=\"subscribe-checkbox\" />\n                </div>{\"\\n\"}\n                <Button type=\"primary\" label=\"Submit\" btnType=\"submit\" />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst FormGrid = () => (\n    <>\n        <h2 id=\"form-grid\">Form grid</h2>\n        <p>\n            You can use the grid system to customize how forms are displayed. Just wrap your form elements in a row container to have two or more input elements next to eachother horizontally.\n            Remember to add <Property value=\".col-{your_size}\"/> to the forms.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form onSubmit={e => e.preventDefault()}>\n                <div className=\"row\">\n                    <div className=\"col-5\">\n                        <InputGroup\n                            id=\"grid-first-name\"\n                            type=\"text\"\n                            autoComplete=\"given-name\"\n                            label=\"First name\"\n                            placeholder=\"Enter your first name\"\n                            helpBlock=\"Hope it is something cool\"\n                        />\n                    </div>\n                    <div className=\"col-5\">\n                        <InputGroup\n                            id=\"grid-last-name\"\n                            type=\"text\"\n                            label=\"Last name\"\n                            autoComplete=\"family-name\"\n                            placeholder=\"Enter your last name\"\n                            helpBlock=\"Most likely in your passport\"\n                        />\n                    </div>\n                    <div className=\"col-2\">\n                        <div className=\"form-group\">{\"\\n\"}\n                            <br />{\"\\n\"}\n                            <button type=\"submit\" className=\"btn btn-primary\">Search</button>{\"\\n\"}\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst Validation = () => (\n    <>\n        <h2 id=\"validation\">Validation overview</h2>\n        <p>To use our validation, start by adding the attribute <Attribute name=\"novalidate\" /> to your <PrismCode className=\"language-html\">{\"<form>\"}</PrismCode> element. If you wish to validate your entire form, add the <Attribute data name=\"validate\" /> attribute to the <PrismCode className=\"language-html\">{\"<form>\"}</PrismCode> tag, if not add it to the desired <PrismCode className=\"language-html\">{\"<input>\"}</PrismCode> tags.</p>\n        <p>Validates against <Attribute name=\"required\" /> and <Attribute name=\"pattern\" />. Using <Attribute name=\"pattern\" /> overrides default patterns.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form noValidate data-validate=\"\">\n                <InputGroup\n                    id=\"validation-name-1\"\n                    type=\"text\"\n                    label=\"Name\"\n                    placeholder=\"Enter your name\"\n                    helpBlock=\"This one should be easy\"\n                />\n                <InputGroup\n                    id=\"validation-email-1\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Enter your email\"\n                    helpBlock=\"This one should be pretty easy too\"\n                />{\"\\n\"}\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        </ComponentPreview>\n\n        <h3>Feedback</h3>\n        <p>\n            To give users validation feedback on each input insert the message in the attributes <Attribute data name=\"success\" /> and <Attribute data name=\"error\" /> in\n            the <Attribute value=\".help-block\" /> element. To display an asterisk you have to include a label with your input element.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form action=\"#\" noValidate data-validate=\"\">\n                <InputGroup\n                    required\n                    id=\"validation-email-2\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"bob.corlsan@example.com\"\n                    prefixType=\"icon\"\n                    prefixValue=\"email\"\n                    helpBlock\n                    successMessage=\"Right!\"\n                    errorMessage=\"Wrong!\"\n                />{\"\\n\"}\n                <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n            </form>\n        </ComponentPreview>\n\n        <h3>Dynamically disabled submit button</h3>\n        <p>You can also dynamically disable the submit button by adding <Attribute data name=\"disable-invalid\" /> to the <PrismCode className=\"language-html\">{\"<button type=\\\"submit\\\">\"}</PrismCode> element.</p>\n        <p><b>NOTE:</b> For this to work you also need the <Attribute data name=\"validate\" /> attribute to be present in the <PrismCode className=\"language-html\">{\"<form>\"}</PrismCode> tag.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form action=\"#\" noValidate data-validate=\"\">\n                <InputGroup\n                    required\n                    id=\"validation-email-3\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"bob.corlsan@example.com\"\n                    prefixType=\"icon\"\n                    prefixValue=\"email\"\n                    helpBlock=\"Keep your eye on that submit button\"\n                    successMessage=\"Right!\"\n                    errorMessage=\"Wrong!\"\n                />{\"\\n\"}\n                <button className=\"btn btn-primary\" type=\"submit\" data-disable-invalid=\"\">Submit</button>\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst UsageWithFieldsets = () => (\n    <>\n        <h2 id=\"usage-with-fieldsets\">Usage with fieldsets</h2>\n        <p>Use fieldsets to give your forms more structure.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form onSubmit={e => e.preventDefault()}>\n                <fieldset>\n                    <legend>Log in</legend>\n                    <InputGroup\n                        id=\"fieldset-username\"\n                        type=\"text\"\n                        autoComplete=\"username\"\n                        label=\"Username\"\n                        placeholder=\"Enter your username\"\n                    />\n                    <InputGroup\n                        id=\"fieldset-password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        autoComplete=\"current-password\"\n                        placeholder=\"Enter your password\"\n                    />\n                    <Checkbox label=\"Remember me\" id=\"fieldset-checkbox\" />\n                </fieldset>{\"\\n\"}\n                <Button type=\"primary\" label=\"Log in\" btnType=\"submit\" />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst StaticText = () => (\n    <>\n        <h2 id=\"static-text\">Static text</h2>\n        <p>To just display static text in forms use a <PrismCode className=\"language-html\">{\"<span>\"}</PrismCode> inside a form</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <FormControlText label=\"Company\" text=\"PayEx\" />\n            <FormControlText label=\"Employee\" text=\"Bob Corlsan\" />\n        </ComponentPreview>\n    </>\n);\n\nconst Checkboxes = () => (\n    <>\n        <h2 id=\"checkboxes\">Checkboxes</h2>\n        <p>\n            Use checkboxes to make it so a user can select several options. If you need to restrict the number of possible selections to one, see radio buttons.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Checkbox label=\"Bread\" id=\"checkbox-example-1\" />\n            <Checkbox label=\"Not bread. I'm not really fond of it. What I would really like, however, is one single piece of cracker with some nutella on it. Perhaps this could be the second checkbox. These thoughts are written here simply to show you how the checkboxes align themselves when label text is fairly long.\" id=\"checkbox-example-2\" />\n            <Checkbox label=\"Milk\" id=\"checkbox-example-3\" checked />\n        </ComponentPreview>\n    </>\n);\n\nconst RadioButtons = () => (\n    <>\n        <h2 id=\"radio-buttons\">Radio buttons</h2>\n        <p>\n            Use radio buttons when you wish to limit your user to one choice out of several possible.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Radio label=\"Hamburgers\" id=\"radio-example-1\" name=\"radio-example\" />\n            <Radio label=\"Not the one above because I'm not really fond of hamburgers. What I would really like, however, is a nice piece of steak. Perhaps that could be the second option. These thoughts are written here simply to show you how radio buttons align themselves when label text is fairly long.\" id=\"radio-example-2\" name=\"radio-example\" />\n            <Radio label=\"Pizza\" id=\"radio-example-3\" name=\"radio-example\" checked />\n        </ComponentPreview>\n    </>\n);\n\nconst Toggleboxes = () => (\n    <>\n        <h2 id=\"toggleboxes\">Toggleboxes</h2>\n        <p>\n            Use toggleboxes if you wish present the user with an either-or option.\n        </p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Togglebox id=\"togglebox-example-1\" label=\"Enable overdrive\" />\n            <Togglebox id=\"togglebox-example-2\" label=\"Enable superpowers\" checked />\n        </ComponentPreview>\n    </>\n);\n\nconst RangeSlider = () => (\n    <>\n        <h2 id=\"rangeslider\">Rangeslider</h2>\n        <p>Asides from the default behavior of a range input, the Rangeslider{\"'\"}s colors and label positioning can be customized.</p>\n        <p>Currently there are three different supported colors for the slider: <Property value=\".rangeslider-brand\" />, <Property value=\".rangeslider-default\" /> and <Property value=\".rangeslider-neutral\" />.</p>\n        <p>The Rangeslider currently supports two positions: <Property value=\".label-right\" /> and <Property value=\".label-top\" />. If no position is given, <Property value=\"right\" /> is defaulted.</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Rangeslider min={0} max={200} step={1} value={100} valueLabel valueLabelPrefix=\"$\" valueLabelPostfix=\"%\" />\n        </ComponentPreview>\n\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Rangeslider min={0} max={200} step={1} value={100} color=\"neutral\" valueLabel valueLabelPrefix=\"$\" valueLabelPostfix=\"%\" valueLabelPosition=\"top\" />\n        </ComponentPreview>\n    </>\n);\n\nconst DisabledFormComponents = () => (\n    <>\n        <h2 id=\"disabled-form-components\">Disabled form components</h2>\n        <p>Disable whichever form component you want by adding <Attribute name=\"disabled\" /> to the desired input element</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <Togglebox id=\"togglebox-disabled-example-1\" label=\"Enable overdrive\" disabled />\n            <Radio label=\"Hamburgers\" id=\"radio-disabled-example-1\" name=\"radio-disabled-example\" disabled />\n            <Checkbox label=\"Milk\" id=\"checkbox-disabled-example-3\" disabled checked />\n            <Rangeslider className=\"mb-2\" min={0} max={200} step={1} value={100} valueLabel valueLabelPrefix=\"$\" valueLabelPostfix=\"%\" disabled/>\n        </ComponentPreview>\n\n        <h3>Disable a fieldset</h3>\n        <p>Disable entire fieldsets by adding <Attribute name=\"disabled\" /> to the fieldset element</p>\n        <ComponentPreview language=\"html\" showCasePanel codeFigure>\n            <form>\n                <fieldset disabled>\n                    <legend>Log in</legend>\n                    <InputGroup\n                        id=\"fieldset-disabled-username\"\n                        type=\"text\"\n                        autoComplete=\"username\"\n                        label=\"Username\"\n                        placeholder=\"Enter your username\"\n                    />\n                    <InputGroup\n                        id=\"fieldset-disabled-password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        autoComplete=\"current-password\"\n                        placeholder=\"Enter your password\"\n                    />\n                    <Checkbox label=\"Remember me\" id=\"fieldset-disabled-checkbox\" />\n                </fieldset>{\"\\n\"}\n                <Button type=\"primary\" label=\"Log in\" btnType=\"submit\" disabled />{\"\\n\"}\n            </form>\n        </ComponentPreview>\n    </>\n);\n\nconst JavascriptMethods = () => (\n    <>\n        <h2 id=\"javascript-methods\">JavaScript methods</h2>\n        <JavascriptDocs componentName=\"validation\" />\n        <p>\n            The <PxScript component=\"validation\" func=\"init\" /> can be used on a form tag to initialize all fields\n            contained in the form, or you can pass a single field to initialize just that one.\n        </p>\n    </>\n);\n\nclass Forms extends Component {\n    componentDidMount () {\n        rangeslider.init();\n        validation.init();\n    }\n\n    render () {\n        return (\n            <DocContainer docToc>\n                <p className=\"lead\">\n                    Form componenets allow you to gather user input in various different ways.\n                </p>\n                <Overview />\n                <FormGrid />\n                <Validation />\n                <UsageWithFieldsets />\n                <StaticText />\n                <Checkboxes />\n                <RadioButtons />\n                <Toggleboxes />\n                <RangeSlider />\n                <DisabledFormComponents />\n                <JavascriptMethods />\n            </DocContainer>\n        );\n    }\n}\n\nexport default Forms;\n\n/* For testing */\nexport { Overview, FormGrid, Validation, UsageWithFieldsets, StaticText, Checkboxes, RadioButtons, Toggleboxes, RangeSlider, DisabledFormComponents, JavascriptMethods };\n"],"sourceRoot":""}
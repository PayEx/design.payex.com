{"version":3,"sources":["webpack://payex/./src/App/components/Steps/index.js","webpack://payex/./src/App/Documentation/components/Steps/index.js"],"names":["DefaultSteps","title","subtitle","completed","ongoing","selected","StepContent","_ref","react_default","a","createElement","Fragment","className","RenderSteps","_ref2","steps","map","_ref3","i","clickable","key","classnames","Steps_StepContent","RenderStepsNav","_ref4","clickableItem","some","item","arrowLeft","arrowRight","Steps","_ref5","vertical","stepsClasses","Steps_RenderSteps","Steps_RenderStepsNav","propTypes","PropTypes","array","bool","__webpack_require__","d","__webpack_exports__","Steps_BasicSteps","Steps_VerticalSteps","Steps_ClickableSteps","BasicSteps","id","utils","language","showCasePanel","codeFigure","components_Steps","VerticalSteps","value","lib_default","ClickableSteps","docToc"],"mappings":"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","file":"scripts/doc-route.chunk_21.js?dc99339c020b5446df04","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst DefaultSteps = [\n    {\n        title: \"Step one\",\n        subtitle: \"24.12.17 12:10\",\n        completed: true\n    },\n    {\n        title: \"Step two\",\n        ongoing: true\n    },\n    {\n        title: \"Step three\",\n        selected: true\n    },\n    {\n        title: \"Step four\"\n    }\n];\n\nconst StepContent = ({ completed, subtitle, title }) => (\n    <>\n        {completed ? <><div className=\"material-icons steps-icon\" >check</div>{ \"\\n\" }</> : null}\n        {title}\n        {subtitle ? <>{ \"\\n\" }<div className=\"steps-sub-title\">{subtitle}</div></> : null}\n    </>\n);\n\nconst RenderSteps = ({ steps }) => (\n    <>\n        {steps.map(({ title, subtitle, completed, ongoing, selected, clickable }, i) => (\n            <li key={i} className={classnames(completed ? \"steps-completed\" : null,\n                ongoing ? \"steps-ongoing\" : null,\n                selected ? \"steps-selected\" : null)}>\n                { clickable ?\n                    <>{ \"\\n\" } <a><StepContent completed={completed} subtitle={subtitle} title={title}/></a> { \"\\n\" } </>\n                    :\n                    <StepContent completed={completed} subtitle={subtitle} title={title}/>\n                }\n            </li>\n        ))}\n    </>\n);\n\nconst RenderStepsNav = ({ steps }) => {\n    if (!steps) {\n        return null;\n    }\n\n    const clickableItem = steps.some(item => item.clickable);\n\n    const arrowLeft = clickableItem ? <div className=\"material-icons steps-nav-left\">keyboard_arrow_left</div> : null;\n    const arrowRight = clickableItem ? <div className=\"material-icons steps-nav-right\">keyboard_arrow_right</div> : null;\n\n    return <>\n        <div className=\"steps-responsive\">\n            { arrowLeft }\n            <div className=\"steps-responsive-text\">Step 3</div>\n            { arrowRight }\n        </div>\n    </>;\n};\n\nconst Steps = ({ steps, vertical }) => {\n    const stepsClasses = classnames(\n        \"steps\",\n        vertical ? \"steps-vertical\" : null,\n    );\n\n    return (<div className={stepsClasses}>\n        <ol>\n            {steps ? <RenderSteps steps={steps} /> : <RenderSteps steps={DefaultSteps} />}\n        </ol>\n        <RenderStepsNav steps={steps} />\n    </div>);\n};\n\nSteps.propTypes = {\n    steps: PropTypes.array,\n    vertical: PropTypes.bool,\n    clickable: PropTypes.bool\n};\n\nexport default Steps;\n\n// exporting for testing purposes\nexport { DefaultSteps };\n","import React from \"react\";\nimport PrismCode from \"react-prism\";\n\nimport { ComponentPreview, DocContainer, Property } from \"#\";\nimport StepsComponent from \"@/Steps\";\n\nconst BasicSteps = () => {\n    const steps = [\n        {\n            title: \"Step one\",\n            subtitle: \"24.12.17 12:10\",\n            completed: true\n\n        },\n        {\n            title: \"Step two\",\n            ongoing: true,\n            selected: true\n        },\n        {\n            title: \"Step three\"\n        },\n        {\n            title: \"Step four\"\n        }\n    ];\n\n    return (\n        <>\n            <h2 id=\"basic-usage\">Basic usage</h2>\n            <p>\n                The standard steps component will render horizontally and scale according to the size of its parent.\n            </p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <StepsComponent steps={steps} />\n            </ComponentPreview>\n        </>\n    );\n};\n\nconst VerticalSteps = () => {\n    const steps = [\n        {\n            title: \"Step one\",\n            completed: true\n        },\n        {\n            title: \"Step two\",\n            ongoing: true,\n            selected: true\n        },\n        {\n            title: \"Step three\"\n        },\n        {\n            title: \"Step four\"\n        }\n    ];\n\n    return (\n        <>\n            <h2 id=\"vertical-steps\">Vertical steps</h2>\n            <p>\n                If you wish to use steps vertically you can add <Property value=\".steps-vertical\" /> to the <PrismCode className=\"language-html\">{\"<div>\"}</PrismCode> element.\n            </p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <StepsComponent steps={steps} vertical />\n            </ComponentPreview>\n        </>\n    );\n};\n\nconst ClickableSteps = () => {\n    const steps = [\n        {\n            title: \"Step one\",\n            completed: true,\n            clickable: true\n        },\n        {\n            title: \"Step two\",\n            ongoing: true,\n            clickable: true\n        },\n        {\n            title: \"Step three\",\n            clickable: true\n        },\n        {\n            title: \"Step four\",\n            selected: true\n        },\n        {\n            title: \"Step Five\"\n        },\n        {\n            title: \"Step Six\"\n        }\n    ];\n\n    return (\n        <>\n            <h2 id=\"clickable-steps\">Clickable steps</h2>\n            <p>\n                Add an anchor element (<PrismCode className=\"language-html\">{\"<a>\"}</PrismCode>) to the list item element ( <PrismCode className=\"language-html\">{\"<li>\"}</PrismCode>).\n                Ensure that all content within the list element is also inside the anchor element.\n            </p>\n            <ComponentPreview language=\"html\" showCasePanel codeFigure>\n                <StepsComponent steps={steps} />\n            </ComponentPreview>\n        </>\n    );\n};\n\nconst Steps = () => (\n    <DocContainer docToc>\n        <p className=\"lead\">\n            Use steps to visualize the users progress through a process.\n        </p>\n        <BasicSteps />\n        <VerticalSteps />\n        <ClickableSteps />\n    </DocContainer>\n);\n\nexport default Steps;\n\n/* for testing */\nexport { BasicSteps, VerticalSteps, ClickableSteps };\n"],"sourceRoot":""}